{"remainingRequest":"/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/babel-loader/lib/index.js!/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/wavesurfer.js-vue/src/WaveSurferVue.vue?vue&type=template&id=729be26d&scoped=true","dependencies":[{"path":"/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/wavesurfer.js-vue/src/WaveSurferVue.vue","mtime":1625429133720},{"path":"/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/cache-loader/dist/cjs.js","mtime":1625429133938},{"path":"/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/babel-loader/lib/index.js","mtime":1625429133894},{"path":"/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1625429140904},{"path":"/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/cache-loader/dist/cjs.js","mtime":1625429133938},{"path":"/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/vue-loader-v16/dist/index.js","mtime":1625429140904}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgd2l0aFNjb3BlSWQgYXMgX3dpdGhTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTcyOWJlMjZkIik7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImRpdiIpOwp9KTs="},{"version":3,"sources":["/Users/macbook/Documents/GitHub/thetrackmonster/node_modules/wavesurfer.js-vue/src/WaveSurferVue.vue"],"names":[],"mappings":";;;;;uBACE,YAAA,CAAW,KAAX,C","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\nimport WaveSurfer from \"wavesurfer.js\";\nexport default {\n  props: ['src', 'options'],\n  data() {\n    return {\n      waveSurfer: {}\n    };\n  },\n  mounted() {\n    let options = this.options;\n    let wsOptions = Object.assign({ container: this.$el }, options);\n    this.waveSurfer = new WaveSurfer.create(wsOptions);\n    this.waveSurfer.load(this.src);\n  },\n  beforeDestroy() {\n    this.waveSurfer.destroy();\n  }\n};\n</script>\n\n<style lang=\"css\" scoped>\ndiv {\n  position: relative;\n}\n</style>"],"sourceRoot":""}]}